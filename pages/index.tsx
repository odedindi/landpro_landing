// ======================= React & Next =======================
import * as React from 'react';
import type { GetStaticProps, NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';

import dynamic from 'next/dynamic';
// ========================== styles ==========================
// import * as S from 'styles/page/home';
import { Row } from 'antd';
// ======================= translations =======================
import { useTranslation } from 'next-i18next';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
// ========================= icons ========================
// import greenField from '../assets/imgs/svg/greenField.png';
// import plantInHands from '../assets/imgs/svg/plantInHands.png';
// import farmland from '../assets/imgs/svg/farmland.png';
// ========================== news ========================
// import { landProNews } from '../components/News/newsFeed';
// ====================== components ======================
// const Button = dynamic(() => import('../components/Button'));
// const ContactFrom = dynamic(() => import('../components/ContactForm'));
// const ContentBlock = dynamic(() => import('../components/layout/ContentBlock'));
// const MiddleBlock = dynamic(() => import('../components/layout/MiddleBlock'));
// const LandProCarousel = dynamic(() => import('../components/Carousel/landpro'));
// const SectionCard = dynamic(() =>
//     import('../components/layout/ContentBlock/sectionCard')
// );

// const NewsCard = dynamic(() => import('../components/News/NewsCard'));

// =========================================================

const Home: NextPage = () => {
	const [didMount, setDidMount] = React.useState(false);
	React.useEffect(() => setDidMount(true), []);

	const { t } = useTranslation('common');

	const scrollTo = (id: string) => {
		const element = document.getElementById(id);
		if (element) element.scrollIntoView({ behavior: 'smooth' });
	};

	const PageNavi = () => (
		<>
			{/* <S.Header id="pageNavi">
                <S.Container>
                    <Row gutter={15} type="flex" justify="start" align="middle">
                        <S.PageLink onClick={() => scrollTo('about')}>
                            <S.Span>{t('homePage.links.product')}</S.Span>
                        </S.PageLink>

                        <S.PageLink onClick={() => scrollTo('mission')}>
                            <S.Span>{t('homePage.links.mission')}</S.Span>
                        </S.PageLink>

                        <S.PageLink onClick={() => scrollTo('news')}>
                            <S.Span>{t('homePage.links.news')}</S.Span>
                        </S.PageLink>

                        <S.PageLink
                            onClick={() => scrollTo('contact')}
                            style={{ width: '125px' }}
                        >
                            <S.Span>
                                <Button>{t('homePage.links.contact')}</Button>
                            </S.Span>
                        </S.PageLink>
                    </Row>
                </S.Container>
            </S.Header> */}
		</>
	);

	if (!didMount) return null;
	return (
		<main>
			<PageNavi />
			<h2>heya</h2>

			{/* <ContentBlock
	first="true"
	id="intro"
	type="right"
	title={t('homePage.intro.title')}
	content={t('homePage.intro.text')}
	icon={greenField}
	iconAlt="greenField"
/>
<MiddleBlock
	id="intoSub"
	title={t('homePage.introSub.title')}
	content={t('homePage.introSub.text')}
/>
<MiddleBlock title={t('homePage.how.title')}>
	<LandProCarousel />
</MiddleBlock>

<ContentBlock
	type="left"
	id="about"
	title={t('homePage.about.title')}
	content={t('homePage.about.text')}
	icon={plantInHands}
	iconAlt="plant in hands"
>
	{['section1', 'section2', 'section3'].map((section, index) => (
		<SectionCard
			key={section}
			title={t(`homePage.about.${section}Title`)}
			content={t(`homePage.about.${section}Content`)}
			span={index !== 2 ? 10 : 20}
		/>
	))}
</ContentBlock>

<ContentBlock
	type="right"
	title={t('homePage.mission.title')}
	content={t('homePage.mission.text')}
	icon="ayoraExample"
	id="mission"
/>

<MiddleBlock title="Latest News" id="news" />
{newsFeed.articles.map((newsItem, index) => (
	<NewsCard key={index} {...newsItem} />
))}
<MiddleBlock />
<ContentBlock
	type="left"
	id="product"
	title={t('homePage.product.title')}
	content={t('homePage.product.text')}
	icon={farmland}
	iconAlt="farmland"
/>

<ContactFrom id="contact" title={t('homePage.contact.title')} /> */}
		</main>
	);
};

export const getStaticProps: GetStaticProps = async ({ locale }) => ({
	props: {
		...(await serverSideTranslations(locale as string, [
			'nav',
			'common',
			'footer',
		])),
	},
});

export default Home;

// <div className={styles.container}>
// 	<Head>
// 		<title>Create Next App</title>
// 		<meta name="description" content="Generated by create next app" />
// 		<link rel="icon" href="/favicon.ico" />
// 	</Head>

// 	<main className={styles.main}>
// 		<h1 className={styles.title}>
// 			Welcome to <a href="https://nextjs.org">Next.js!</a>
// 		</h1>

// 		<p className={styles.description}>
// 			Get started by editing{' '}
// 			<code className={styles.code}>pages/index.js</code>
// 		</p>

// 		<div className={styles.grid}>
// 			<a href="https://nextjs.org/docs" className={styles.card}>
// 				<h2>Documentation &rarr;</h2>
// 				<p>Find in-depth information about Next.js features and API.</p>
// 			</a>

// 			<a href="https://nextjs.org/learn" className={styles.card}>
// 				<h2>Learn &rarr;</h2>
// 				<p>Learn about Next.js in an interactive course with quizzes!</p>
// 			</a>

// 			<a
// 				href="https://github.com/vercel/next.js/tree/master/examples"
// 				className={styles.card}>
// 				<h2>Examples &rarr;</h2>
// 				<p>Discover and deploy boilerplate example Next.js projects.</p>
// 			</a>

// 			<a
// 				href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
// 				className={styles.card}>
// 				<h2>Deploy &rarr;</h2>
// 				<p>
// 					Instantly deploy your Next.js site to a public URL with Vercel.
// 				</p>
// 			</a>
// 		</div>
// 	</main>

// 	<footer className={styles.footer}>
// 		<a
// 			href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
// 			target="_blank"
// 			rel="noopener noreferrer">
// 			Powered by{' '}
// 			<span className={styles.logo}>
// 				<Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
// 			</span>
// 		</a>
// 	</footer>
// </div>
